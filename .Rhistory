10^5
prod(seq(26,2,-2))
nCk <- choose (n,2)
n <- seq(26,2, by = -2)
nCk <- choose (n,2)
log_allways <- sum(log(nCk))
exp(log_allways)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("here")
install.pacakges("here")
install.packages("here")
library("here")
pres08 <- read_csv(here::here("data", "pres08.csv"),
col_types = cols(
state.name = col_character(),
state = col_character(),
Obama = col_integer(),
McCain = col_integer(),
EV = col_integer()
))
data(pres08,package = "qss")
#                    day = col_date(format = ""),
#                   statename = col_character(),
#                  MarketD = col_character(),
#                 PriceD = col_double(),
#                VolumeD = col_integer(),
#               MarketR = col_character(),
#              PriceR = col_double(),
#             VolumeR = col_integer(),
#            state = col_character()
#         )) %>%
data(intrade08,package = "qss")
intrade08 <- intrade08 %>% select(-X1)
View(intrade08)
intrade08 <- intrade08 %>% select(-1)
ELECTION_DAY <- as.Date("2008-11-04")
intrade_final <- intrade08 %>%
filter(day == ELECTION_DAY - 1) %>%
left_join(pres08,by = "state") %>%
mutate(EV_exp = (PriceD /100)*EV) %>%
select(state,EV,PriceD,EV_exp) %>%
summarise(EV_exp = sum(EV_exp))
View(intrade_final)
View(intrade_final)
p <- 0.9
sample(c(0,1),size = 100, replace = TRUE, prob = c(p,1-p))
rbinom(100,size = 1,prob = p)
if (!require(rvest)) { install.packages('rvest'); require(rvest) } # see https://github.com/hadley/rvest
library(tibble)
library(stringr) # for doing string manipulations
url_link <- "https://www.nytimes.com/interactive/2017/06/23/opinion/trumps-lies.html"
nyt <- read_html(url_link) #TODO
View(nyt)
View(nyt)
View(nyt)
results <- nyt %>% html_nodes(css =".short-desc") #TODO: input an appropriate CSS selector into html_nodes
results
?html_text
first_result <- results[1]
extract_date <- function(result){
date <- result %>% html_nodes("strong") %>% html_text(trim=TRUE)
str_c(date)
}
View(first_result)
View(results)
extract_date(first_result)
?str_c
extract_date <- function(result){
date <- result %>% html_nodes("strong") %>% html_text(trim=TRUE)
#str_c(date)
}
extract_date(first_result)
extract_date(first_result)
extract_date <- function(result){
date <- result %>% html_nodes("strong") %>% html_text(trim=TRUE)
str_c(date)
}
extract_date(first_result)
xml_contents(first_result) # which value is the lie/quote?
# TODO: fill this in!
extract_lie <- function(result){
lie <- nyt %>% html_node(css = ".short-desc") %>% html_text(trim = TRUE)
str_sub()
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
xml_contents(first_result) # which value is the lie/quote?
?xml_node
# TODO: fill this in!
extract_lie <- function(result){
lie <- result %>% xml_node(xpath = 2) %>% html_text(trim = TRUE)
str_sub(lie)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
}
}
lie <- result %>% xml_node(xpath = "2") %>% html_text(trim = TRUE)
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
# TODO: fill this in!
extract_lie <- function(result){
lie <- result %>% xml_node(xpath = "2") %>% html_text(trim = TRUE)
str_sub(lie)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
xml_contents(first_result) # which value is the lie/quote?
xml_node(first_result,xpath = "/node")
View(first_result)
xml_contents(first_result) # which value is the lie/quote?
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_text(result) %>% html_text(trim = TRUE)
#str_sub()
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
xml_contents(first_result) # which value is the lie/quote?
?xml_text
xml_contents(first_result)[2] # which value is the lie/quote?
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_contents(first_result)[2] %>% html_text(trim = TRUE)
#str_sub()
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
?str_sub
str_sub
?str_sub
if (!require(rvest)) { install.packages('rvest'); require(rvest) } # see https://github.com/hadley/rvest
library(tibble)
library(stringr) # for doing string manipulations
# you can use a different string manipulation library if you want
?str_sub
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_contents(first_result)[2] %>% html_text(trim = TRUE)
str_sub(lie,start = 2,end = -2)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_contents(result)[2] %>% html_text(trim = TRUE)
str_sub(lie,start = 2,end = -2)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
xml_contents(result)[2]
xml_contents(first_result)[2]
xml_contents(first_result)
xml_contents(first_result) # which value is the lie/quote?
if (!require(rvest)) { install.packages('rvest'); require(rvest) } # see https://github.com/hadley/rvest
library(tibble)
library(stringr) # for doing string manipulations
# you can use a different string manipulation library if you want
# run this line to understand what read_html() does
?read_html
url_link <- "https://www.nytimes.com/interactive/2017/06/23/opinion/trumps-lies.html"
nyt <- read_html(url_link) #TODO
?html_nodes
results <- nyt %>% html_nodes(css =".short-desc") #TODO: input an appropriate CSS selector into html_nodes
results
first_result <- results[1]
extract_date <- function(result){
date <- result %>% html_nodes("strong") %>% html_text(trim=TRUE)
str_c(date)
}
extract_date(first_result)
xml_contents(first_result) # which value is the lie/quote?
xml_contents(first_result)[2] # which value is the lie/quote?
xml_contents(first_result)[[2]] # which value is the lie/quote?
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_contents(result)[[2]] %>% html_text(trim = TRUE)
str_sub(lie,start = 2,end = -2)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_contents(result)[[2]] %>% html_text(trim = TRUE)
#str_sub(lie,start = 2,end = -2)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_contents(result)[[2]] %>% html_text(trim = TRUE)
str_sub(lie)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
first_result
explanation <- html_node(result,css = "a") %<% html_text(trim = TRUE) %<% str_sub(lie,start = 2,end = -2)
explanation <- html_node(result,css = "a") %>% html_text(trim = TRUE) %>% str_sub(lie,start = 2,end = -2)
extract_explanation <- function(result) {
explanation <- html_node(result,css = "a") %>% html_text(trim = TRUE) %>% str_sub(lie,start = 2,end = -2)
}
extract_explanation(first_result) # should return something like "He was for an invasion before he was against it."
extract_explanation <- function(result) {
explanation <- html_node(result,css = "a") %>% html_text(trim = TRUE)
str_sub(explanation,start = 2,end = -2)
}
extract_explanation(first_result) # should return something like "He was for an invasion before he was against it."
View(first_result)
first_result
View(first_result)
xml_contents(first_result)
?html_node
extract_url <- function(result) {
url <- html_node(result,css = "a") %>% html_attr("href")
url
}
extract_url(first_result) # should return something like "https://www.buzzfeed.com/andrewkaczynski/in-2002-donald-trump-said-he-supported-invading-iraq-on-the"
records <- tribble( ~date, ~lie, ~explanation, ~url)
extract_date <- function(result){
date <- result %>% html_nodes("strong") %>% html_text(trim=TRUE)
str_c(date)
}
extract_date(first_result)
extract_date <- function(result){
date <- result %>% html_nodes("strong") %>% html_text(trim=TRUE)
date
}
extract_date(first_result)
extract_date <- function(result){
date <- result %>% html_nodes("strong") %>% html_text(trim=TRUE)
str_c(date)
}
extract_date(first_result)
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_contents(result)[[2]] %>% html_text(trim = TRUE) %<% str_sub(,start = 2,end = -2)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_contents(result)[[2]] %>% html_text(trim = TRUE) %>% str_sub(,start = 2,end = -2)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_contents(result)[[2]] %>% html_text(trim = TRUE) %>% str_sub(start = 2,end = -2)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_contents(result)[[2]] %>% html_text(trim = TRUE)
str_sub(lie,start = 2,end = -2)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
lie <- xml_contents(result)[[2]] %>% html_text(trim = TRUE) %>% str_sub(,start = 2,end = -2)
# TODO: fill this in!
extract_lie <- function(result){
lie <- xml_contents(result)[[2]] %>% html_text(trim = TRUE) %>% str_sub(,start = 2,end = -2)
}
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
extract_lie(first_result) # should something like "I wasn't a fan of Iraq. I didn't want to go into Iraq."
for (i in seq(1:length(results))) {
result <- results[i]
date <- result %>% html_nodes("strong") %>% html_text(trim=TRUE)
lie <- xml_contents(result)[[2]] %>% html_text(trim = TRUE)
lie <- str_sub(lie,start = 2,end = -2)
explanation <- html_node(result,css = "a") %>% html_text(trim = TRUE)
explanation <- str_sub(explanation,start = 2,end = -2)
url <- html_node(result,css = "a") %>% html_attr("href")
records <- add_row(records, date = date, lie = lie, explanation = explanation, url = url)
}
View(records)
fileviewer <- data(fileviewer,package = "qss")
fileviewer <- data(filedrawer,package = "qss")
remove(.)
remove(filedrawer)
remove(filedviewer)
remove(fileviewer)
fileviewer <- data(filedrawer,package = "qss")
remove(fileviewer)
published <- data(published, package = "qss")
published <- data(published, package = "qss")
published <- data(published, package = "qss")
View(filedrawer)
load("~/OneDrive/study/classes/POLS501/KazunoriKasahara/Project/.RData")
load("~/OneDrive/study/classes/POLS501/KazunoriKasahara/.RData")
load("~/OneDrive/study/classes/POLS501/KazunoriKasahara/Project/.RData")
load("~/.RData")
load("~/.RData")
setwd("~/OneDrive/深川ゼミ/演習III/Innovation/Innovation_SEasia")
FDI <- read_csv('FDI.csv')
library(base)
FDI <- read_csv('FDI.csv')
setwd("~/OneDrive/深川ゼミ/演習III/Innovation/Innovation_SEasia")
plot(panel[8:11])
setwd("~/OneDrive/深川ゼミ/演習III/Innovation/Innovation_SEasia")
panel <- readRDS('panel')
View(panel)
panel_RD <- read.csv('panel_data_by_label.csv')
View(panel_RD)
View(panel_RD)
library(tidyverse)
panel_RD <- panel_RD %>% filter(Year != NA)
panel_RD <- read.csv('panel_data_by_label.csv')
panel_RD$Year
panel_RD %>% filter(Year == NA)
panel_RD <- panel_RD %>% filter(Year!=NA)
panel_RD <- read.csv('panel_data_by_label.csv')
?na.omit
is.na(panel_RD$Year)
is.na(panel_RD$Year) == TRUE
is.na(panel_RD$Year) == FALSE
panel_RD <- panel_RD %>% filter(is.na(panel_RD$Year) == FALSE)
View(panel_RD)
panel_RD <- panel_RD %>% select(-1)
View(panel_RD)
names(panel_RD)[1] <- 'country'
unique(panel_RD$country)
length(unique(panel_RD$country))
length(unique(panel_RD$Year))
rep(1,2)
cbind(brep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYA',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
cbind(rep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYA',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
rbind(rep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYA',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
c(rep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYA',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
panel$country<-c(rep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYA',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
panel_RD$country<-c(rep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYA',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
names(panel_RD)
panel_RD <- panel_RD %>% select(1,2,3,5,17,25)
View(panel_RD)
names(panel_RD)
names(panel_RD)[3:6]
names(panel_RD)[3:6] <- c('attitude_globalization','business_RD','IPR','total_RD')
View(panel)
panel_RD$public_RD <- panel_RD$total_RD - panel_RD$business_RD
summmary(panel_RD)
summary(panel_RD)
type(panel_RD)
mode(panel_RD)
mode(panel_RD$business_RD)
mode(panel_RD$total_RD)
panel_RD$public_RD <- panel_RD$total_RD - panel_RD$business_RD
panel_RD$total_RD - panel_RD$business_RD
panel_RD$public_RD <- panel_RD$total_RD-panel_RD$business_RD
panel_RD$public_RD <- panel_RD$total_RD - panel_RD$business_RD
panel_RD$total_RD
panel_RD$total_RD +1
is.numeric(panel_RD$total_RD)
is.factor(panel_RD$total_RD)
panel_RD$total_RD <- as.numeric(panel_RD$total_RD)
panel_RD$business_RD <- as.numeric(panel$business_RD)
panel_RD <- read.csv('panel_data_by_label.csv')
panel_RD <- panel_RD %>% filter(is.na(panel_RD$Year) == FALSE)
panel_RD <- panel_RD %>% select(-1)
names(panel_RD)[1] <- 'country'
panel_RD$country<-c(rep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYA',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
panel_RD <- panel_RD %>% select(1,2,3,5,17,25)
names(panel_RD)[3:6] <- c('attitude_globalization','business_RD','IPR','total_RD')
panel_RD$total_RD <- as.numeric(panel_RD$total_RD)
panel_RD$business_RD <- as.numeric(panel$business_RD)
panel <- readRDS('panel')
panel_RD <- read.csv('panel_data_by_label.csv')
panel_RD <- panel_RD %>% filter(is.na(panel_RD$Year) == FALSE)
panel_RD <- panel_RD %>% select(-1)
names(panel_RD)[1] <- 'country'
panel_RD$country<-c(rep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYA',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
panel_RD <- panel_RD %>% select(1,2,3,5,17,25)
names(panel_RD)[3:6] <- c('attitude_globalization','business_RD','IPR','total_RD')
View(panel_RD)
panel_RD$total_RD <- as.numeric(panel_RD$total_RD)
panel_RD$business_RD <- as.numeric(panel$business_RD)
panel_RD <- read.csv('panel_data_by_label.csv')
panel_RD <- panel_RD %>% filter(is.na(panel_RD$Year) == FALSE)
panel_RD <- panel_RD %>% select(-1)
names(panel_RD)[1] <- 'country'
panel_RD$country<-c(rep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYA',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
panel_RD <- panel_RD %>% select(1,2,3,5,17,25)
names(panel_RD)[3:6] <- c('attitude_globalization','business_RD','IPR','total_RD')
panel_RD$total_RD <- as.numeric(panel_RD$total_RD)
as.numeric(panel$business_RD)
is.numeric(business_RD)
panel_RD$business_RD <- as.numeric(panel_RD$business_RD)
panel <- readRDS('panel')
panel_RD <- read.csv('panel_data_by_label.csv')
panel_RD <- panel_RD %>% filter(is.na(panel_RD$Year) == FALSE)
panel_RD <- panel_RD %>% select(-1)
names(panel_RD)[1] <- 'country'
panel_RD$country<-c(rep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYA',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
panel_RD <- panel_RD %>% select(1,2,3,5,17,25)
names(panel_RD)[3:6] <- c('attitude_globalization','business_RD','IPR','total_RD')
panel_RD$total_RD <- as.numeric(as.character(panel_RD$total_RD))
panel_RD$business_RD <- as.numeric(as.character(panel_RD$business_RD))
panel_RD$public_RD <- panel_RD$total_RD - panel_RD$business_RD
education <- read_csv('year of education.csv')
View(education)
library(tidyverse)
education[2:121]
education[2,3]
education[2:121,]
education <- education[2:121,]
education <- educaiton %>% select(-7,-8)
education <- education %>% select(-7,-8)
education <- education %>% select(2,3,6)
View(education)
names(education) < c ('country','year','education_year')
names(education) <- c ('country','year','education_year')
names(education) <- c ('country','year','edu_year')
education$country<-c(rep('CHN',length(unique(education$year))),rep('IDN',length(unique(education$year))),rep('KOR',length(unique(education$year))),rep('MYA',length(unique(education$year))),rep('THA',length(unique(education$year))))
View(panel)
patent <- panel %<% select(1,2,6)
patent <- panel %<% select(1,2,6)
patent <- panel %>% select(1,2,6)
View(patent)
View(patent)
GDPperCapita <- read.csv(GDPperCapita.csv)
GDPperCapita <- read.csv('GDPperCapita.csv')
View(GDPperCapita)
FDI <- read.csv('FDI.csv')
patent <- read.csv('patent.csv',skip = 7)
royalty <- read.csv('royalty.csv')
import <- readRDS('import_panel')
export <- readRDS('export_panel')
colnames(FDI) <- c('country','year','FDI')
patent <- patent %>% select(1,2,3)
colnames(patent) <- c('country','year','patent')
patent$country[which(patent$country=='IND')] <- 'IDN'
colnames(royalty) <- c('country','year','royalty')
panel <-
left_join(import,export, by = c ('year','country')) %>%
left_join(FDI,by = c ('year','country')) %>%
left_join(patent,by = c ('year','country')) %>%
left_join(royalty,by = c ('year','country'))
View(panel)
View(panel)
View(panel)
panel_RD$country<-c(rep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYS',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
education$country<-c(rep('CHN',length(unique(education$year))),rep('IDN',length(unique(education$year))),rep('KOR',length(unique(education$year))),rep('MYS',length(unique(education$year))),rep('THA',length(unique(education$year))))
patent <- read.csv('patent.csv',skip = 7)
View(patent)
patent <- patent %>% select(1,2,3)
names(patent) <- c('country','year','patent')
View(GDPperCapita)
names(GDPperCapita) <- c('country','year','GDPpercapita')
View(GDPperCapita)
panel_RD <- read.csv('panel_data_by_label.csv')
panel_RD <- panel_RD %>% filter(is.na(panel_RD$Year) == FALSE)
panel_RD <- panel_RD %>% select(-1)
names(panel_RD)[1] <- 'country'
panel_RD$country<-c(rep('CHN',length(unique(panel_RD$Year))),rep('IDN',length(unique(panel_RD$Year))),rep('KOR',length(unique(panel_RD$Year))),rep('MYS',length(unique(panel_RD$Year))),rep('THA',length(unique(panel_RD$Year))))
panel_RD <- panel_RD %>% select(1,2,3,5,17,25)
names(panel_RD)[3:6] <- c('attitude_globalization','business_RD','IPR','total_RD')
panel_RD$total_RD <- as.numeric(as.character(panel_RD$total_RD))
panel_RD$business_RD <- as.numeric(as.character(panel_RD$business_RD))
panel_RD$public_RD <- panel_RD$total_RD - panel_RD$business_RD
education <- read_csv('year of education.csv')
education <- education[2:121,]
education <- education %>% select(-7,-8)
education <- education %>% select(2,3,6)
names(education) <- c ('country','year','edu_year')
education$country<-c(rep('CHN',length(unique(education$year))),rep('IDN',length(unique(education$year))),rep('KOR',length(unique(education$year))),rep('MYS',length(unique(education$year))),rep('THA',length(unique(education$year))))
patent <- read.csv('patent.csv',skip = 7)
patent <- patent %>% select(1,2,3)
names(patent) <- c('country','year','patent')
GDPperCapita <- read.csv('GDPperCapita.csv')
names(GDPperCapita) <- c('country','year','GDPpercapita')
View(education)
View(GDPperCapita)
View(panel_RD)
View(patent)
View(panel_RD)
panel_RD[2]
names(panel_RD)
names(panel_RD)[2] <- 'year'
left_join(education,by = c('country','year')
panel_2 <- panel_RD %>%
panel_2 <- panel_RD %>%
left_join(GDPperCapita,by = c('country','year') %>%
left_join(patent,by = c('country','year')) %>%
left_join(education,by = c('country','year')
)
left_join(education,by = c('country','year'))
panel_2 <- panel_RD %>%
left_join(GDPperCapita,by = c('country','year')) %>%
left_join(patent,by = c('country','year')) %>%
left_join(education,by = c('country','year'))
type(education$year)
is.numeric(education$year)
is.numeric(GDPperCapita$year)
is.numeric(panel_RD$year)
is.numeric(patent$year)
is.factor(education$year)
is.character(education$year)
education$year <- as.numeric(education$year)
panel_2 <- panel_RD %>%
left_join(GDPperCapita,by = c('country','year')) %>%
left_join(patent,by = c('country','year')) %>%
left_join(education,by = c('country','year'))
education$year <- as.numeric(education$year)
panel_2 <- panel_RD %>%
left_join(GDPperCapita,by = c('country','year')) %>%
left_join(patent,by = c('country','year')) %>%
left_join(education,by = c('country','year'))
is.numeric(panel_RD$year)
is.numeric(GDPperCapita$year)
is.numeric(patent$year)
is.numeric(patent$year)
is.character(panel_RD$country)
is.character(GDPperCapita$country)
is.character(education$country)
GDPperCapita$country <- as.character(GDPperCapita$country)
panel_2 <- panel_RD %>%
left_join(GDPperCapita,by = c('country','year')) %>%
left_join(patent,by = c('country','year')) %>%
left_join(education,by = c('country','year'))
View(panel_2)
View(panel_RD)
View(panel_RD)
summarise(panel_2)
names(panel_2)
ssss
